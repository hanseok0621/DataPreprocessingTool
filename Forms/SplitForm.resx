<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>